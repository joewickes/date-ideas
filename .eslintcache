[{"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/index.js":"1","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/reportWebVitals.js":"2","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/components/App/App.js":"3","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/routes/HomePageRoute/HomePageRoute.js":"4","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/routes/SignUpRoute/SignUpRoute.js":"5","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/routes/LogInRoute/LogInRoute.js":"6","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/context/Context.js":"7","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/components/Header/Header.js":"8","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/components/Welcome/Welcome.js":"9","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/components/Footer/Footer.js":"10","/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/services/api-services.js":"11"},{"size":897,"mtime":1612809055465,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1612189910884,"results":"14","hashOfConfig":"13"},{"size":1125,"mtime":1612809153517,"results":"15","hashOfConfig":"13"},{"size":5153,"mtime":1613157697869,"results":"16","hashOfConfig":"13"},{"size":1885,"mtime":1612387886601,"results":"17","hashOfConfig":"13"},{"size":1991,"mtime":1613162417831,"results":"18","hashOfConfig":"13"},{"size":7065,"mtime":1613162622572,"results":"19","hashOfConfig":"13"},{"size":1552,"mtime":1613162676042,"results":"20","hashOfConfig":"13"},{"size":1350,"mtime":1612386702533,"results":"21","hashOfConfig":"13"},{"size":217,"mtime":1612287285329,"results":"22","hashOfConfig":"13"},{"size":3927,"mtime":1612995990022,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"dqr3m3",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/index.js",[],["48","49"],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/reportWebVitals.js",[],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/components/App/App.js",[],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/routes/HomePageRoute/HomePageRoute.js",[],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/routes/SignUpRoute/SignUpRoute.js",[],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/routes/LogInRoute/LogInRoute.js",["50"],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/context/Context.js",[],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/components/Header/Header.js",[],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/components/Welcome/Welcome.js",[],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/components/Footer/Footer.js",[],"/Users/joe/Documents/projects/thinkful/capstones/capstone-3/date-ideas/src/services/api-services.js",["51","52"],"const apiServices = {\n  getLoggedOutActivities: () => {\n    return fetch(`http://localhost:8000/api/activities`)\n      .then(response => {\n        return response.json();\n      })\n    ;\n  },\n  getLoggedOutMeals: () => {\n    return fetch(`http://localhost:8000/api/meals`)\n      .then(response => {\n        return response.json();\n      })\n    ;\n  },\n  getLoggedOutDesserts: () => {\n    return fetch(`http://localhost:8000/api/desserts`)\n      .then(response => {\n        return response.json();\n      })\n    ;\n  },\n  getLoggedInActivities: (userId) => {\n    return fetch(`http://localhost:8000/api/activities`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({userId: userId}),\n    })\n    .then(response => {\n      return response.json();\n    })\n  },\n  getLoggedInMeals: (userId) => {\n    return fetch(`http://localhost:8000/api/meals`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({userId: userId}),\n    })\n    .then(response => {\n      return response.json();\n    })\n  },\n  getLoggedInDesserts: (userId) => {\n    return fetch(`http://localhost:8000/api/desserts`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({userId: userId}),\n    })\n    .then(response => {\n      return response.json();\n    })\n  },\n  getLoggedInSingleActivity: (activityId) => {\n    return fetch (`http://localhost:8000/api/activities/${activityId}`)\n      .then(response => {\n        return response.json();\n      })\n    ;\n  },\n  getLoggedInSingleMeal: (mealId) => {\n    return fetch (`http://localhost:8000/api/activities/${mealId}`)\n      .then(response => {\n        return response.json();\n      })\n    ;\n  },\n  getLoggedInSingleDessert: (dessertId) => {\n    return fetch (`http://localhost:8000/api/activities/${dessertId}`)\n      .then(response => {\n        return response.json();\n      })\n    ;\n  },\n  findExclusion: (userId, categoryId, category) => {\n    let newCategory = null;\n    if (category === 'activity') {\n      newCategory = 'activities'\n    } else if (category === 'meal') {\n      newCategory = 'meals'\n    } else if (category === 'dessert') {\n      newCategory = 'desserts'\n    }\n\n    console.log('finding exclusion at', userId, categoryId, newCategory)\n\n    return fetch(`http://localhost:8000/api/excluded`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({userId: userId, categoryId: categoryId, category: category}),\n    })\n    .then(response => {\n      console.log('happened');\n      return response.json();\n    })\n  },\n  addExclusion: (userId, ideaID, category) => {\n    let newCategory = null;\n    if (category === 'activity') {\n      newCategory = 'activities'\n    } else if (category === 'meal') {\n      newCategory = 'meals'\n    } else if (category === 'dessert') {\n      newCategory = 'desserts'\n    }\n\n    console.log('adding exclusion at', userId, ideaID, category)\n    \n    return fetch(`http://localhost:8000/api/excluded`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({userId: userId, ideaId: ideaID, category: category}),\n    })\n    .then(response => {\n      return response.json();\n    })\n  },\n  deleteExclusion: (excludedID, category) => {\n    let newCategory = null;\n    if (category === 'activity') {\n      newCategory = 'activities'\n    } else if (category === 'meal') {\n      newCategory = 'meals'\n    } else if (category === 'dessert') {\n      newCategory = 'desserts'\n    }\n\n    console.log('deleting exclusion at', excludedID, category)\n\n    return fetch(`http://localhost:8000/api/excluded/${excludedID}`, {\n      method: 'DELETE',\n    })\n    .then(response => {\n      return response.json();\n    })\n  }\n}\n\nexport default apiServices;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":16,"column":8,"nodeType":"59","messageId":"60","endLine":16,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":111,"column":7,"nodeType":"59","messageId":"60","endLine":111,"endColumn":18},{"ruleId":"57","severity":1,"message":"61","line":134,"column":7,"nodeType":"59","messageId":"60","endLine":134,"endColumn":18},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'apiServices' is defined but never used.","Identifier","unusedVar","'newCategory' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]